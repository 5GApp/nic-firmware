#! /usr/bin/python
import os, sys, subprocess
Import('env') # exported by parent SConstruct
from pkgmods.FileList import FileList

vs = env['ENV']['BRANCH'] + "-" + env['ENV']['BUILD_NUM']
mod_name = "nfp_net"
drv_name = mod_name + "-" + vs

pkg_name = "ns-agilio-core-nic"

def dkms_conf_builder(target, source, env):
    # source is the template file
    # target is the generated file

    pname = None
    pver = None

    if 'PNAME' in env.Dictionary():
        pname = env['PNAME']
    else:
        raise SCons.Errors.BuildError()

    if 'PVER' in env.Dictionary():
        pver = env['PVER']
    else:
        raise SCons.Errors.BuildError()

    # create dir structure for temp file
    d = os.path.dirname(str(target[0]))
    if not os.path.exists(d):
        os.makedirs(d)

    # Copy source to target
    cmd = "cp %s %s" % (str(source[0]), str(target[0]))
    subprocess.check_output(cmd, shell=True)

    cmd = "chmod 0644 %s" % str(target[0])
    subprocess.check_output(cmd, shell=True)

    # modify temp file
    pkg_name_cmd = "sed -i -e 's/PACKAGE_NAME=\\\"\\\"/PACKAGE_NAME=\\\"%s\\\"/g' %s" % (pname, str(target[0]))
    pkg_ver_cmd = "sed -i -e 's/PACKAGE_VERSION=\\\"\\\"/PACKAGE_VERSION=\\\"%s\\\"/g' %s" % (pver, str(target[0]))

    subprocess.check_output(pkg_name_cmd, shell=True)
    subprocess.check_output(pkg_ver_cmd, shell=True)


# add / define dkms_conf_builder in scons env
dkms_conf_bld = Builder(action=dkms_conf_builder)
env.Append(BUILDERS = {'NfpnetKmodDkmsConfBuilder': dkms_conf_bld})

# setup target to make dkms.conf
dkms_conf_template = os.path.join(env['ENV']['ROOT_ENV_PATH'], \
                                      "nfp-nic", "kernel", mod_name, "dkms", \
                                      "dkms.conf.temp")
dkms_conf_final = os.path.join(env['ENV']['ROOT_ENV_PATH'], \
                                   "nfp-nic", "kernel", mod_name, "dkms", \
                                   "dkms.conf")
# build dkms.conf
nfp_net_kmod_dkms_conf_target = env.NfpnetKmodDkmsConfBuilder(target=dkms_conf_final, \
                                                                      source=dkms_conf_template, \
                                                                      PNAME=pkg_name, \
                                                                      PVER=vs)
env.AlwaysBuild(nfp_net_kmod_dkms_conf_target) # always rebuild target when included
Default(nfp_net_kmod_dkms_conf_target) # add to default builder

