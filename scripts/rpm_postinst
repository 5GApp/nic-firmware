#!/bin/bash

FIRMWARE_DIR=/lib/firmware/netronome
# CNIC is from deb/rpm and UPNIC is upstream FW or backup of
FIRMWARE_DIR_CNIC=/lib/firmware/netronome/cnic
FIRMWARE_DIR_UPNIC=/lib/firmware/netronome/nic

mkdir -p $FIRMWARE_DIR_UPNIC

#Delete symbolic links if any
find $FIRMWARE_DIR -maxdepth 1 -name *.nffw -type l -delete

#Delete hard links if any
for FILE in `find $FIRMWARE_DIR -maxdepth 1 -type f -name *.nffw`; do
    if [ $(stat --printf='%h' $FILE) != '1' ]; then
        rm $FILE
    fi
done

# backup remaining FW files, assumed to be upstream FW
# TODO: figure out what to do with future upstream FW already placed in UPNIC
find $FIRMWARE_DIR -maxdepth 1 -type f -name *.nffw -exec mv -t \
    $FIRMWARE_DIR_UPNIC {} +;

#Create links
ln -s $FIRMWARE_DIR_CNIC/* $FIRMWARE_DIR/

echo "Switched to CoreNIC firmware files in /lib/firmware/netronome/cnic"

for POSTINST in %{_datarootdir}/%{module_name}/postinst; do
        if [ -f $POSTINST ]; then
                $POSTINST %{module_name} %{version} %{_datarootdir}/%{module_name}

        # Backup netronome blacklist
        blacklist_file=/etc/modprobe.d/blacklist-netronome.conf

        if [ -e "$blacklist_file" ]; then
            cp "$blacklist_file" "$blacklist_file".corenic.bak
        fi

        # Enable start script
        systemctl enable ns-core-nic.service

        # Clear any old config
        /opt/netronome/bin/ns-core-nic-setup clean

        # Generate new config
        /opt/netronome/bin/ns-core-nic-setup force

        # Disable logging
        /opt/netronome/bin/ns-core-nic-setup log-disable

        /opt/netronome/bin/ns-core-nic-setup check-flash || :

        exit $?
        fi
        echo "WARNING: $POSTINST does not exist."
done

echo -e "ERROR: DKMS version is too old and %{module_name} was not"
echo -e "built with legacy DKMS support."
echo -e "You must either rebuild %{module_name} with legacy postinst"
echo -e "support or upgrade DKMS to a more current version."
exit 1
