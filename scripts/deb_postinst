#! /bin/bash

ret=0
ERR_DKMS_ADD=16
ERR_DKMS_BUILD=17
ERR_DKMS_INSTALL=18
ERR_DKMS_MOD_NAME=19
ERR_DKMS_MOD_VERSION=20
ERR_DKMS_REMOVE=21

# Deb packaging scons target modifies the below fields
DKMS_MODULE_NAME=""
DKMS_MODULE_VERSION=""

if [ "$DKMS_MODULE_NAME" = "" ]; then
    echo "DKMS_MODULE_NAME must be specified."
    ret=$ERR_DKMS_MOD_NAME
fi

if [ "$DKMS_MODULE_VERSION" = "" ]; then
    echo "DKMS_MODULE_VERSION must be specified."
    ret=$ERR_DKMS_MOD_VERSION
fi

print_heading() {
    echo "======== $1 ========"
}

process_dkms() {
    print_heading "Processing DKMS"
    dkms add -m "$DKMS_MODULE_NAME" -v "$DKMS_MODULE_VERSION"
    ret=$?
    if [ $ret -ne 0 ]; then
        ret=$ERR_DKMS_ADD
    else
        kernel_count=0
        for sm in `find /boot -nowarn -name "System.map*"`; do
            kernel=${sm#"/boot/System.map-"}
            grep -wq quirk_nfp6000 $sm
            if [ $? -ne 0 ]; then
                echo -n "ERR47 kernel patches not detected for version: "
                echo $kernel
                # TODO: instruct the user on how to apply them
            else
                echo -n $sm
                echo " has ERR47 patch"
                dkms build -m "$DKMS_MODULE_NAME" -v "$DKMS_MODULE_VERSION" \
                    -k $kernel
                ret=$?
                if [ $ret -ne 0 ]; then
                    ret=$ERR_DKMS_BUILD
                else
                    dkms install -m "$DKMS_MODULE_NAME" -v \
                        "$DKMS_MODULE_VERSION" -k $kernel
                    ret=$?
                    if [ $ret -ne 0 ]; then
                        ret=$ERR_DKMS_INSTALL
                    fi
                    kernel_array[kernel_count]=$kernel
                    let "kernel_count= $kernel_count + 1"
                fi
            fi
        done

   fi
}

check_flash() {
    print_heading "Check flash version in the NFP NIC"

    local NETRONOME_BIN="/opt/netronome/bin"
    local flash_image=/opt/netronome/flash/flash-nic.bin
    # Note, the sed below ifgnores nfp-media changes IE using a breakout cable
    local nfp_versions=$($NETRONOME_BIN/nfp-fis list -v | sed '/^hwinfo.bin.*$/d')
    local flash_versions=$($NETRONOME_BIN/nfp-fis --image=$flash_image list -v)

    if [ "$flash_versions" = "$nfp_versions" ]; then
        echo "NFP has desired flash image"
    else
        print_heading "NFP needs to be flashed. Please run the following commands:"
        # TODO use newer BSP and nfp-flash flag '--preserve-media-overrides'
        echo -n -e "\t"
        echo "$NETRONOME_BIN/nfp-flash --i-accept-the-risk-of-overwriting-miniloader --preserve-media-overrides -w $flash_image"
        # TODO change this when supporting SFs
        echo -n -e "\t"
        echo "$NETRONOME_BIN/nfp-one"
        echo -n -e "\t"
        echo "reboot"
        print_heading
    fi
}

echo "Executing the Post install script"
process_dkms
if [ $ret -ne 0 ]; then
    echo "There was an error processing dkms install. ERROR $ret"
    exit $ret
fi

# Backup netronome blacklist
blacklist_file=/etc/modprobe.d/blacklist-netronome.conf

if [ -e "$blacklist_file" ]; then
    cp "$blacklist_file" "$blacklist_file".corenic.bak
fi

# Enable start script
update-rc.d ns-core-nic.autorun defaults
update-rc.d ns-core-nic.autorun enable

# Clear any old config
service ns-core-nic.autorun clean
# Generate new config
service ns-core-nic.autorun start

# Disable logging
/opt/netronome/bin/ns-core-nic-setup log-disable

echo "Core NIC's nfp_net driver succesfully installed for the following"
echo "kernel versions:"
echo -n -e "\t"
count=0
while [ $count -lt $kernel_count ]; do
    echo -n ${kernel_array[${count}]}
    echo -n " "
    count=$(( $count + 1 ))
done
echo ""

check_flash
