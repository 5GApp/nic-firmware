From c93d8e1d0c1445f418058b4fd33d9096feca2859 Mon Sep 17 00:00:00 2001
From: Edwin Peer <edwin.peer@netronome.com>
Date: Fri, 21 Sep 2018 17:05:01 -0700
Subject: [PATCH 2/9] [PCI.OUT] optimize len calc in PD

The 16-bit DATALEN field can be extracted during the add using a +16
alu operation. A global constant for negative one is introduced to
avoid the need for an immediate load.

Signed-off-by: Edwin Peer <edwin.peer@netronome.com>
---
 me/blocks/vnic/pci_out_pd.uc | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/me/blocks/vnic/pci_out_pd.uc b/me/blocks/vnic/pci_out_pd.uc
index ddf23a74..b96ea22b 100644
--- a/me/blocks/vnic/pci_out_pd.uc
+++ b/me/blocks/vnic/pci_out_pd.uc
@@ -399,7 +399,6 @@ ctm_only#:
     #endif /* NFD_OUT_RX_OFFSET > 0 */
     wsm_extract(tmp, in_work,  SB_WQ_RID)
     sm_set_noclr(word, PCIE_DMA_RID, tmp)
-    wsm_extract(len, in_work, SB_WQ_DATALEN)
 
     // Gambling on being fast enough to beat the DMA pull from these registers
     #pragma warning(disable:5117)
@@ -411,7 +410,7 @@ ctm_only#:
     #pragma warning(default:5117)
     // This wait() always has 2 defer slots following it
     wait_br_next_state(in_wait_sig0, in_wait_sig1, LABEL, defer[2])
-    alu[len, len, -, 1]
+    alu[len, g_neg_one, +16, in_work[SB_WQ_DATALEN_wrd]]
     sm_set_noclr_to(out_dma0[3], word, PCIE_DMA_XLEN, len, 1)
     #pragma warning(default:4701)
     #pragma warning(default:5009)
@@ -943,6 +942,7 @@ main#:
     .reg volatile g_pcie_addr_hi
     .reg volatile g_dma_max
     .reg volatile g_num_ticket_errors
+    .reg volatile g_neg_one
 
     .reg @ndequeued
     .init @ndequeued SB_WQ_CREDIT_BATCH
@@ -1073,7 +1073,7 @@ main#:
     move(g_pcie_addr_hi, (PCIE_ISL << 30))
     move(g_dma_max, PCIE_DMA_MAX_LEN)
     move(g_num_ticket_errors, 0)
-
+    move(g_neg_one, -1)
 
 
     /*
-- 
2.19.0

